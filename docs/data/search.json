{"list":[{"title":"module:app","link":"<a href=\"module-app.html\">app</a>","description":"<p>Main Express application setup and configuration</p>"},{"title":"module:app~app","link":"<a href=\"module-app.html#~app\">app</a>","description":"<p>Express application instance</p>"},{"title":"module:config/db","link":"<a href=\"module-config_db.html\">config/db</a>","description":"<p>MongoDB database connection configuration</p>"},{"title":"module:config/db~connectDB","link":"<a href=\"module-config_db.html#~connectDB\">connectDB</a>","description":"<p>Establishes connection to MongoDB database</p>"},{"title":"module:controllers/authController","link":"<a href=\"module-controllers_authController.html\">controllers/authController</a>","description":"<p>Handles user authentication operations including registration, login, and password management</p>"},{"title":"module:controllers/authController~forgotPassword","link":"<a href=\"module-controllers_authController.html#~forgotPassword\">forgotPassword</a>","description":"<p>Sends a password reset OTP to user's email</p>"},{"title":"module:controllers/authController~getAllUsers","link":"<a href=\"module-controllers_authController.html#~getAllUsers\">getAllUsers</a>","description":"<p>Retrieves all users from the database</p>"},{"title":"module:controllers/authController~loginUser","link":"<a href=\"module-controllers_authController.html#~loginUser\">loginUser</a>","description":"<p>Authenticates a user and issues JWT tokens</p>"},{"title":"module:controllers/authController~logoutUser","link":"<a href=\"module-controllers_authController.html#~logoutUser\">logoutUser</a>","description":"<p>Logs out a user by invalidating their tokens</p>"},{"title":"module:controllers/authController~otpStore","link":"<a href=\"module-controllers_authController.html#~otpStore\">otpStore</a>","description":"<p>Store OTPs temporarily for password reset functionality</p>"},{"title":"module:controllers/authController~refreshToken","link":"<a href=\"module-controllers_authController.html#~refreshToken\">refreshToken</a>","description":"<p>Generates a new access token using a refresh token</p>"},{"title":"module:controllers/authController~registerUser","link":"<a href=\"module-controllers_authController.html#~registerUser\">registerUser</a>","description":"<p>Registers a new user in the system</p>"},{"title":"module:controllers/authController~resendOtp","link":"<a href=\"module-controllers_authController.html#~resendOtp\">resendOtp</a>","description":"<p>Resends OTP to user's email</p>"},{"title":"module:controllers/authController~resetPassword","link":"<a href=\"module-controllers_authController.html#~resetPassword\">resetPassword</a>","description":"<p>Resets user's password after OTP verification</p>"},{"title":"module:controllers/authController~transporter","link":"<a href=\"module-controllers_authController.html#~transporter\">transporter</a>","description":"<p>Nodemailer transporter for sending emails</p>"},{"title":"module:controllers/authController~verifyOtp","link":"<a href=\"module-controllers_authController.html#~verifyOtp\">verifyOtp</a>","description":"<p>Verifies the OTP entered by user</p>"},{"title":"module:controllers/buildingController","link":"<a href=\"module-controllers_buildingController.html\">controllers/buildingController</a>","description":"<p>Handles operations related to campus buildings and points of interest</p>"},{"title":"module:controllers/buildingController~createBuildings","link":"<a href=\"module-controllers_buildingController.html#~createBuildings\">createBuildings</a>","description":"<p>Creates multiple building entries (admin only)</p>"},{"title":"module:controllers/buildingController~getPOIs","link":"<a href=\"module-controllers_buildingController.html#~getPOIs\">getPOIs</a>","description":"<p>Retrieves all points of interest in ordered sequence</p>"},{"title":"module:controllers/eventController","link":"<a href=\"module-controllers_eventController.html\">controllers/eventController</a>","description":"<p>Handles operations related to campus events including creation, retrieval, and updates</p>"},{"title":"module:controllers/eventController~createEvent","link":"<a href=\"module-controllers_eventController.html#~createEvent\">createEvent</a>","description":"<p>Creates a new event (admin only)</p>"},{"title":"module:controllers/eventController~getEventById","link":"<a href=\"module-controllers_eventController.html#~getEventById\">getEventById</a>","description":"<p>Retrieves a specific event by ID</p>"},{"title":"module:controllers/eventController~getUpcomingEvents","link":"<a href=\"module-controllers_eventController.html#~getUpcomingEvents\">getUpcomingEvents</a>","description":"<p>Retrieves upcoming events (all events with date &gt;= current date)</p>"},{"title":"module:controllers/eventController~updateEvent","link":"<a href=\"module-controllers_eventController.html#~updateEvent\">updateEvent</a>","description":"<p>Updates an existing event (admin only)</p>"},{"title":"module:middleware/authMiddlewares","link":"<a href=\"module-middleware_authMiddlewares.html\">middleware/authMiddlewares</a>","description":"<p>Authentication and authorization middleware functions</p>"},{"title":"module:middleware/authMiddlewares~authenticateJWT","link":"<a href=\"module-middleware_authMiddlewares.html#~authenticateJWT\">authenticateJWT</a>","description":"<p>Middleware to authenticate JWT tokens</p>"},{"title":"module:middleware/authMiddlewares~blacklistedTokens","link":"<a href=\"module-middleware_authMiddlewares.html#~blacklistedTokens\">blacklistedTokens</a>","description":"<p>Set to store invalidated/blacklisted tokens</p>"},{"title":"module:middleware/authMiddlewares~isTokenBlacklisted","link":"<a href=\"module-middleware_authMiddlewares.html#~isTokenBlacklisted\">isTokenBlacklisted</a>","description":"<p>Checks if a token has been blacklisted</p>"},{"title":"module:models/Building","link":"<a href=\"module-models_Building.html\">models/Building</a>","description":"<p>Building model representing points of interest on the Northeastern campus</p>"},{"title":"module:models/Building","link":"<a href=\"module-models_Building.html\">module:models/Building</a>","description":"<p>Building model for managing campus points of interest</p>"},{"title":"module:models/Building~BuildingSchema","link":"<a href=\"module-models_Building.html#~BuildingSchema\">BuildingSchema</a>","description":"<p>Building Schema definition</p>"},{"title":"module:models/Event","link":"<a href=\"module-models_Event.html\">models/Event</a>","description":"<p>Event model representing campus events and activities</p>"},{"title":"module:models/Event~Event","link":"<a href=\"module-models_Event.html#~Event\">Event</a>","description":"<p>Event model for managing campus events</p>"},{"title":"module:models/Event~EventSchema","link":"<a href=\"module-models_Event.html#~EventSchema\">EventSchema</a>","description":"<p>Event Schema definition</p>"},{"title":"module:models/User","link":"<a href=\"module-models_User.html\">models/User</a>","description":"<p>User model representing system users with authentication details</p>"},{"title":"module:models/User~User","link":"<a href=\"module-models_User.html#~User\">User</a>","description":"<p>User model for managing user accounts</p>"},{"title":"module:models/User~UserSchema","link":"<a href=\"module-models_User.html#~UserSchema\">UserSchema</a>","description":"<p>User Schema definition</p>"},{"title":"module:routes/authRoutes","link":"<a href=\"module-routes_authRoutes.html\">routes/authRoutes</a>","description":"<p>Routes for user authentication and account management</p>"},{"title":"module:routes/authRoutes~ForgotPassword","link":"<a href=\"module-routes_authRoutes.html#~ForgotPassword\">ForgotPassword</a>","description":"<p>POST /auth/forgot_password - Initiate password reset by sending OTP</p>"},{"title":"module:routes/authRoutes~GetAllUsers","link":"<a href=\"module-routes_authRoutes.html#~GetAllUsers\">GetAllUsers</a>","description":"<p>GET /auth/users - Get all users (for admin purposes)</p>"},{"title":"module:routes/authRoutes~LoginUser","link":"<a href=\"module-routes_authRoutes.html#~LoginUser\">LoginUser</a>","description":"<p>POST /auth/login - Authenticate and login a user</p>"},{"title":"module:routes/authRoutes~LogoutUser","link":"<a href=\"module-routes_authRoutes.html#~LogoutUser\">LogoutUser</a>","description":"<p>POST /auth/logout - Logout a user and invalidate tokens</p>"},{"title":"module:routes/authRoutes~ProtectedRoute","link":"<a href=\"module-routes_authRoutes.html#~ProtectedRoute\">ProtectedRoute</a>","description":"<p>GET /auth/protected - Example protected route requiring authentication</p>"},{"title":"module:routes/authRoutes~RefreshToken","link":"<a href=\"module-routes_authRoutes.html#~RefreshToken\">RefreshToken</a>","description":"<p>POST /auth/refreshtoken - Get a new access token using refresh token</p>"},{"title":"module:routes/authRoutes~RegisterUser","link":"<a href=\"module-routes_authRoutes.html#~RegisterUser\">RegisterUser</a>","description":"<p>POST /auth/register - Register a new user</p>"},{"title":"module:routes/authRoutes~ResendOTP","link":"<a href=\"module-routes_authRoutes.html#~ResendOTP\">ResendOTP</a>","description":"<p>POST /auth/resend_otp - Resend password reset OTP</p>"},{"title":"module:routes/authRoutes~ResetPassword","link":"<a href=\"module-routes_authRoutes.html#~ResetPassword\">ResetPassword</a>","description":"<p>POST /auth/reset_password - Set a new password after OTP verification</p>"},{"title":"module:routes/authRoutes~VerifyOTP","link":"<a href=\"module-routes_authRoutes.html#~VerifyOTP\">VerifyOTP</a>","description":"<p>POST /auth/verify_otp - Verify password reset OTP</p>"},{"title":"module:routes/buildingRoutes","link":"<a href=\"module-routes_buildingRoutes.html\">routes/buildingRoutes</a>","description":"<p>Routes for building and points of interest operations</p>"},{"title":"module:routes/buildingRoutes~CreateBuildings","link":"<a href=\"module-routes_buildingRoutes.html#~CreateBuildings\">CreateBuildings</a>","description":"<p>POST /building - Create new building entries (admin only)</p>"},{"title":"module:routes/buildingRoutes~GetPOIs","link":"<a href=\"module-routes_buildingRoutes.html#~GetPOIs\">GetPOIs</a>","description":"<p>GET /building/pois - Get all points of interest</p>"},{"title":"module:routes/eventRoutes","link":"<a href=\"module-routes_eventRoutes.html\">routes/eventRoutes</a>","description":"<p>Routes for managing campus events</p>"},{"title":"module:routes/eventRoutes~CreateEvent","link":"<a href=\"module-routes_eventRoutes.html#~CreateEvent\">CreateEvent</a>","description":"<p>POST /event - Create a new event (admin only)</p>"},{"title":"module:routes/eventRoutes~GetEventById","link":"<a href=\"module-routes_eventRoutes.html#~GetEventById\">GetEventById</a>","description":"<p>GET /event/:id - Get event by ID</p>"},{"title":"module:routes/eventRoutes~GetUpcomingEvents","link":"<a href=\"module-routes_eventRoutes.html#~GetUpcomingEvents\">GetUpcomingEvents</a>","description":"<p>GET /event/upcoming - Get all upcoming events</p>"},{"title":"module:routes/eventRoutes~UpdateEvent","link":"<a href=\"module-routes_eventRoutes.html#~UpdateEvent\">UpdateEvent</a>","description":"<p>PUT /event/:id - Update an existing event (admin only)</p>"},{"title":"module:server","link":"<a href=\"module-server.html\">server</a>","description":"<p>Server entry point that initializes the application</p>"},{"title":"module:utils/hashPassword","link":"<a href=\"module-utils_hashPassword.html\">utils/hashPassword</a>","description":"<p>Utility function for securely hashing user passwords</p>"},{"title":"module:utils/hashPassword~hashPassword","link":"<a href=\"module-utils_hashPassword.html#~hashPassword\">hashPassword</a>","description":"<p>Hashes a password using bcrypt with a salt</p>"}]}